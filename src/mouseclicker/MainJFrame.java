/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mouseclicker;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.MouseInfo;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author smyrnof
 */
public class MainJFrame extends javax.swing.JFrame {

    public MacroThread mt = null;
    public boolean threadislive=false;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        btnOpenSavedlg.addActionListener(new SaveFC());
        btnOpenLoaddlg.addActionListener(new OpenFC());
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
        int iCoordX = (objDimension.width - this.getWidth()) / 2;
        int iCoordY = (objDimension.height - this.getHeight()) / 2;
        this.setLocation(iCoordX, iCoordY);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgRepeat = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnSchedule = new javax.swing.JPanel();
        chbMon = new javax.swing.JCheckBox();
        chbTue = new javax.swing.JCheckBox();
        chbWed = new javax.swing.JCheckBox();
        chbThu = new javax.swing.JCheckBox();
        chbFri = new javax.swing.JCheckBox();
        chbSat = new javax.swing.JCheckBox();
        chbSun = new javax.swing.JCheckBox();
        tfSunStart = new javax.swing.JFormattedTextField();
        tfSatStart = new javax.swing.JFormattedTextField();
        tfFriStart = new javax.swing.JFormattedTextField();
        tfThuStart = new javax.swing.JFormattedTextField();
        tfWedStart = new javax.swing.JFormattedTextField();
        tfTueStart = new javax.swing.JFormattedTextField();
        tfMonStart = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfSunStop = new javax.swing.JFormattedTextField();
        tfSatStop = new javax.swing.JFormattedTextField();
        tfFriStop = new javax.swing.JFormattedTextField();
        tfThuStop = new javax.swing.JFormattedTextField();
        tfWedStop = new javax.swing.JFormattedTextField();
        tfTueStop = new javax.swing.JFormattedTextField();
        tfMonStop = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        rbRepeat = new javax.swing.JRadioButton();
        spRepeatCount = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        rbRepeatCont = new javax.swing.JRadioButton();
        pnAction = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        btnCoorStart = new javax.swing.JButton();
        tfCoor = new javax.swing.JTextField();
        spCoorWaiting = new javax.swing.JSpinner();
        btnCoorAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMacroScript = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        lbCoor = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbCoorButton = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbCoorClick = new javax.swing.JComboBox<>();
        tfCoorComment = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnCoorClear = new javax.swing.JButton();
        pnSettings = new javax.swing.JPanel();
        btnSettingClear = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tfSaveSettingFileName = new javax.swing.JTextField();
        tfLoadSettingFileName = new javax.swing.JTextField();
        btnOpenSavedlg = new javax.swing.JButton();
        btnOpenLoaddlg = new javax.swing.JButton();
        lbSaveSettingFileDirectory = new javax.swing.JLabel();
        lbLoadSettingFileDirectory = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        BtnHotkeySet = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaHotkeyMessage = new javax.swing.JTextArea();
        cbHotkeyFirst = new javax.swing.JComboBox<>();
        cbHotkeySecond = new javax.swing.JComboBox<>();
        cbHotkeyThird = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        btnStartMacro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mouse Clicker V1.03");
        setResizable(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle"); // NOI18N
        chbMon.setText(bundle.getString("Monday")); // NOI18N

        chbTue.setText(bundle.getString("Tuesday")); // NOI18N

        chbWed.setText(bundle.getString("Wednesday")); // NOI18N

        chbThu.setText(bundle.getString("Thursday")); // NOI18N

        chbFri.setText(bundle.getString("Friday")); // NOI18N

        chbSat.setText(bundle.getString("Saturday")); // NOI18N

        chbSun.setText(bundle.getString("Sunday")); // NOI18N

        tfSunStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfSunStart.setText("00:00");
        tfSunStart.setInputVerifier(new TimeVerifier());

        tfSatStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfSatStart.setText("00:00");
        tfSatStart.setInputVerifier(new TimeVerifier());

        tfFriStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfFriStart.setText("00:00");
        tfFriStart.setInputVerifier(new TimeVerifier());

        tfThuStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfThuStart.setText("00:00");
        tfThuStart.setInputVerifier(new TimeVerifier());

        tfWedStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfWedStart.setText("00:00");
        tfWedStart.setInputVerifier(new TimeVerifier());

        tfTueStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfTueStart.setText("00:00");
        tfTueStart.setInputVerifier(new TimeVerifier());

        tfMonStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfMonStart.setText("00:00");
        tfMonStart.setInputVerifier(new TimeVerifier());

        jLabel2.setText(":");

        jLabel3.setText(":");

        jLabel4.setText(":");

        jLabel5.setText(":");

        jLabel6.setText(":");

        jLabel7.setText(":");

        jLabel8.setText(":");

        tfSunStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfSunStop.setText("23:59");
        tfSunStop.setInputVerifier(new TimeVerifier());

        tfSatStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfSatStop.setText("23:59");
        tfSatStop.setInputVerifier(new TimeVerifier());

        tfFriStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfFriStop.setText("23:59");
        tfFriStop.setInputVerifier(new TimeVerifier());

        tfThuStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfThuStop.setText("23:59");
        tfThuStop.setInputVerifier(new TimeVerifier());

        tfWedStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfWedStop.setText("23:59");
        tfWedStop.setInputVerifier(new TimeVerifier());

        tfTueStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfTueStop.setText("23:59");
        tfTueStop.setInputVerifier(new TimeVerifier());

        tfMonStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));
        tfMonStop.setText("23:59");
        tfMonStop.setInputVerifier(new TimeVerifier());

        bgRepeat.add(rbRepeat);
        rbRepeat.setSelected(true);
        rbRepeat.setText(bundle.getString("Repeat")); // NOI18N

        spRepeatCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));

        jLabel10.setText(bundle.getString("times")); // NOI18N

        bgRepeat.add(rbRepeatCont);
        rbRepeatCont.setText(bundle.getString("Repeat continuously")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbRepeatCont)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbRepeat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spRepeatCount, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbRepeat)
                    .addComponent(spRepeatCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbRepeatCont)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnScheduleLayout = new javax.swing.GroupLayout(pnSchedule);
        pnSchedule.setLayout(pnScheduleLayout);
        pnScheduleLayout.setHorizontalGroup(
            pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(chbWed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(chbMon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbTue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbThu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbFri, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbSat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbSun, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTueStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfWedStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfThuStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFriStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSatStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSunStart, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfFriStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSatStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSunStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTueStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfWedStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfThuStop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnScheduleLayout.setVerticalGroup(
            pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnScheduleLayout.createSequentialGroup()
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbMon)
                            .addComponent(tfMonStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tfMonStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbTue)
                            .addComponent(tfTueStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(tfTueStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbWed)
                            .addComponent(tfWedStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(tfWedStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbThu)
                            .addComponent(tfThuStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(tfThuStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbFri)
                            .addComponent(tfFriStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(tfFriStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbSat)
                            .addComponent(tfSatStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(tfSatStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chbSun)
                            .addComponent(tfSunStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(tfSunStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("Schedule"), null, pnSchedule, ""); // NOI18N

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText(bundle.getString("Coordinates")); // NOI18N

        btnCoorStart.setBackground(Color.green);
        btnCoorStart.setText(bundle.getString("Start")); // NOI18N
        btnCoorStart.setOpaque(true);
        btnCoorStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCoorStartMouseClicked(evt);
            }
        });

        spCoorWaiting.setModel(new javax.swing.SpinnerNumberModel(300, 300, 10000, 1));

        btnCoorAdd.setText(bundle.getString("Add")); // NOI18N
        btnCoorAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCoorAddMouseClicked(evt);
            }
        });

        taMacroScript.setColumns(14);
        taMacroScript.setRows(5);
        jScrollPane1.setViewportView(taMacroScript);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText(bundle.getString("Waiting")); // NOI18N

        lbCoor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbCoor.setText("3");

        jLabel9.setText(bundle.getString("sec")); // NOI18N

        cbCoorButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { bundle.getString("Left"), bundle.getString("Middle"), bundle.getString("Right") }));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText(bundle.getString("Button")); // NOI18N

        jLabel1.setText(bundle.getString("Click")); // NOI18N

        cbCoorClick.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { bundle.getString("Single"), bundle.getString("Double") }));
        cbCoorClick.setName(""); // NOI18N

        jLabel13.setText(bundle.getString("Comment")); // NOI18N

        btnCoorClear.setText(bundle.getString("Clear")); // NOI18N
        btnCoorClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCoorClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnActionLayout = new javax.swing.GroupLayout(pnAction);
        pnAction.setLayout(pnActionLayout);
        pnActionLayout.setHorizontalGroup(
            pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnActionLayout.createSequentialGroup()
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(btnCoorStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnActionLayout.createSequentialGroup()
                                .addComponent(lbCoor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCoor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCoorButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCoorClick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spCoorWaiting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCoorComment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCoorAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCoorClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        pnActionLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbCoorButton, cbCoorClick, spCoorWaiting, tfCoor, tfCoorComment});

        pnActionLayout.setVerticalGroup(
            pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnActionLayout.createSequentialGroup()
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(lbCoor)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCoor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCoorStart))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cbCoorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbCoorClick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(spCoorWaiting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfCoorComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCoorAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCoorClear))
                    .addComponent(jScrollPane1))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("Actions"), null, pnAction, ""); // NOI18N

        btnSettingClear.setText(bundle.getString("Clear")); // NOI18N
        btnSettingClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearMouseClicked(evt);
            }
        });

        jLabel14.setText(bundle.getString("Save File")); // NOI18N

        jLabel15.setText(bundle.getString("Load File")); // NOI18N

        jLabel18.setText(bundle.getString("Clear Settings")); // NOI18N

        btnOpenSavedlg.setText(bundle.getString("Save Setting")); // NOI18N

        btnOpenLoaddlg.setText(bundle.getString("Load Settings")); // NOI18N

        lbSaveSettingFileDirectory.setText(" ");

        lbLoadSettingFileDirectory.setText(" ");

        jLabel12.setText(bundle.getString("Hotkey")); // NOI18N

        BtnHotkeySet.setText(bundle.getString("Set")); // NOI18N

        TaHotkeyMessage.setColumns(20);
        TaHotkeyMessage.setRows(3);
        jScrollPane2.setViewportView(TaHotkeyMessage);

        cbHotkeyFirst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alt", "Ctrl", "Shift", "Win" }));
        cbHotkeyFirst.setSelectedIndex(2);
        cbHotkeyFirst.setToolTipText("");

        cbHotkeySecond.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alt", "Ctrl", "Shift", "Win" }));
        cbHotkeySecond.setToolTipText("");

        cbHotkeyThird.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" }));
        cbHotkeyThird.setSelectedIndex(5);
        cbHotkeyThird.setToolTipText("");

        javax.swing.GroupLayout pnSettingsLayout = new javax.swing.GroupLayout(pnSettings);
        pnSettings.setLayout(pnSettingsLayout);
        pnSettingsLayout.setHorizontalGroup(
            pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSettingsLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(lbSaveSettingFileDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnSettingsLayout.createSequentialGroup()
                        .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnSettingsLayout.createSequentialGroup()
                                .addComponent(cbHotkeyFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbHotkeySecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbHotkeyThird, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfSaveSettingFileName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLoadSettingFileName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnSettingsLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnOpenSavedlg, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnOpenLoaddlg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSettingsLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(BtnHotkeySet, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnSettingsLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(235, 235, 235)
                        .addComponent(btnSettingClear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbLoadSettingFileDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pnSettingsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel12, jLabel14, jLabel15, jLabel18});

        pnSettingsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnOpenLoaddlg, btnOpenSavedlg});

        pnSettingsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BtnHotkeySet, btnSettingClear});

        pnSettingsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfLoadSettingFileName, tfSaveSettingFileName});

        pnSettingsLayout.setVerticalGroup(
            pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfSaveSettingFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenSavedlg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSaveSettingFileDirectory)
                .addGap(5, 5, 5)
                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfLoadSettingFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenLoaddlg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLoadSettingFileDirectory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbHotkeyFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbHotkeySecond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbHotkeyThird, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnHotkeySet))
                .addGap(18, 18, 18)
                .addGroup(pnSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(btnSettingClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(bundle.getString("Settings"), null, pnSettings, ""); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnStartMacro.setBackground(java.awt.Color.green);
        btnStartMacro.setText(bundle.getString("Start Macro")); // NOI18N
        btnStartMacro.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(btnStartMacro, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStartMacro, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearMouseClicked
        // TODO add your handling code here:
        tfMonStart.setText("00:00");
        tfMonStop.setText("23:59");
        tfTueStart.setText("00:00");
        tfTueStop.setText("23:59");
        tfWedStart.setText("00:00");
        tfWedStop.setText("23:59");
        tfThuStart.setText("00:00");
        tfThuStop.setText("23:59");
        tfFriStart.setText("00:00");
        tfFriStop.setText("23:59");
        tfSatStart.setText("00:00");
        tfSatStop.setText("23:59");
        tfSunStart.setText("00:00");
        tfSunStop.setText("23:59");

        chbMon.setSelected(false);
        chbTue.setSelected(false);
        chbWed.setSelected(false);
        chbThu.setSelected(false);
        chbFri.setSelected(false);
        chbSat.setSelected(false);
        chbSun.setSelected(false);

        spRepeatCount.setValue(1);
        rbRepeat.setSelected(true);

        tfCoor.setText("");
        spCoorWaiting.setValue(300);
        taMacroScript.setText("");
        tfCoorComment.setText("");

        tfSaveSettingFileName.setText("");
        lbSaveSettingFileDirectory.setText(" ");
        tfLoadSettingFileName.setText("");
        lbLoadSettingFileDirectory.setText(" ");

        cbHotkeyFirst.setSelectedIndex(2);
        cbHotkeySecond.setSelectedIndex(0);
        cbHotkeyThird.setSelectedIndex(5);

    }//GEN-LAST:event_ClearMouseClicked

    private void btnCoorStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCoorStartMouseClicked
        Thread th = new Thread() {
            public int count;

            @Override
            @SuppressWarnings("SleepWhileInLoop")
            public void run() {
                count = 3990;
                if (btnCoorStart.getBackground() == Color.green) {
                    btnCoorStart.setBackground(Color.red);
                    while (count > 990) {
                        try {
                            Thread.sleep(10);
                            tfCoor.setText(Integer.toString(MouseInfo.getPointerInfo().getLocation().x) + "x"
                                    + Integer.toString(MouseInfo.getPointerInfo().getLocation().y));
                            lbCoor.setText(Integer.toString(count / 1000));
                            count -= 10;
                        } catch (InterruptedException ex) {
                            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    lbCoor.setText("0");
                    btnCoorStart.setBackground(Color.green);
                }
            }
        };

        th.start();

    }//GEN-LAST:event_btnCoorStartMouseClicked

    private void btnCoorAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCoorAddMouseClicked
        // TODO add your handling code here:
        taMacroScript.append("#" + tfCoorComment.getText() + ";" + spCoorWaiting.getValue().toString() + ";"
                + cbCoorButton.getSelectedIndex() + "-" + cbCoorButton.getSelectedItem() + ";"
                + cbCoorClick.getSelectedIndex() + "-" + cbCoorClick.getSelectedItem() + ";"
                + tfCoor.getText() + "\n");
    }//GEN-LAST:event_btnCoorAddMouseClicked

    private void btnCoorClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCoorClearMouseClicked
        // TODO add your handling code here:
        taMacroScript.setText("");
        tfCoor.setText("");
        cbCoorButton.setSelectedIndex(0);
        cbCoorClick.setSelectedIndex(0);
        spCoorWaiting.setValue(300);
        tfCoorComment.setText("");
    }//GEN-LAST:event_btnCoorClearMouseClicked

    public int GetIdentifier(int arg) {
        int keyCode = 0;
        if (arg == 0) {
            keyCode = 1;
        }
        if (arg == 1) {
            keyCode = 2;
        }
        if (arg == 2) {
            keyCode = 4;
        }
        if (arg == 3) {
            keyCode = 8;
        }
        return keyCode;
    }

    public class MacroThread extends Thread {

        public Long wait;
        public String macroLine[];
        public String pos[];
        public Robot robot;
        public int button_mask;
        public int playcount = 0;
        public boolean macrocheck = true;

        @Override
        @SuppressWarnings("SleepWhileInLoop")
        public void run() {
            try {
                robot = new Robot();

                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");

                if (!isMacroChecked(taMacroScript.getText())) {
                    macrocheck = false;
                    JOptionPane.showMessageDialog(MainJFrame.this, bundle.getString("MacroError"), bundle.getString("Error"), JOptionPane.ERROR_MESSAGE);
                }

                while (macrocheck) {
                    //if (btnStartMacro.getBackground()!=Color.green) btnStartMacro.setBackground(Color.green);
                    //if (btnStopMacro.getBackground()!=Color.red) btnStopMacro.setBackground(Color.red);
                    if (isTimeScheduled()) {
                        if ((rbRepeat.isSelected()) && (playcount == (Integer) spRepeatCount.getValue())) {
                            break;
                        }
                        for (String line : taMacroScript.getText().split("\\n")) {
                            macroLine = line.split(";");
                            pos = macroLine[4].split("x");

                            //First Step
                            Thread.sleep(Long.valueOf(macroLine[1]));

                            //Second Step
                            robot.mouseMove(Integer.valueOf(pos[0]), Integer.valueOf(pos[1]));

                            switch (macroLine[2].substring(0, 1)) {
                                case "0":
                                    button_mask = InputEvent.BUTTON1_MASK;
                                    break;
                                case "1":
                                    button_mask = InputEvent.BUTTON2_MASK;
                                    break;
                                case "2":
                                    button_mask = InputEvent.BUTTON3_MASK;
                                    break;
                            }

                            //Third Step
                            switch (macroLine[3].substring(0, 1)) {
                                case "0":
                                    robot.mousePress(button_mask);
                                    robot.mouseRelease(button_mask);
                                    break;
                                case "1":
                                    robot.mousePress(button_mask);
                                    robot.mouseRelease(button_mask);
                                    Thread.sleep(200);
                                    robot.mousePress(button_mask);
                                    robot.mouseRelease(button_mask);
                                    break;
                            }

                        }
                        playcount += 1;
                    }
                }
                btnStartMacro.setBackground(Color.green);
                btnStartMacro.setText("Makroyu Başlat");
                threadislive=false;
            } catch (InterruptedException | AWTException ex) {
                btnStartMacro.setBackground(Color.green);
                btnStartMacro.setText("Makroyu Başlat");                
                threadislive=false;
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    public boolean isMacroChecked(String macro) {
        String macroLine[];
        String pos[];
        double d;
        String s;
        
        try{
            for (String line : macro.split("\\n")) {
                macroLine = line.split(";");
                pos = macroLine[4].split("x");

                d = Double.parseDouble(macroLine[1]);
                d = Double.parseDouble(pos[0]);
                d = Double.parseDouble(pos[1]);

                s = macroLine[2].substring(0, 1);
                if (!"0".equals(s)
                        && !"1".equals(s)
                        && !"2".equals(s)) {
                    return false;
                }

                s = macroLine[3].substring(0, 1);
                if (!"0".equals(s)
                        && !"1".equals(s)
                        && !"2".equals(s)) {
                    return false;
                }         
            }          
        }catch(ArrayIndexOutOfBoundsException ex){
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        
        return true;
    }

    public boolean isTimeScheduled() {
        boolean turnon = false;
        String cbstart = "", cbstop = "";
        Date startTime, stopTime, currentTime;

        Calendar calStart = Calendar.getInstance();

        Calendar calStop = Calendar.getInstance();

        Calendar calCurrent = Calendar.getInstance();
        int dayOfWeek = calCurrent.get(Calendar.DAY_OF_WEEK);        
        
        switch (dayOfWeek) {
            case 1:
                cbstart = tfSunStart.getText();
                cbstop = tfSunStop.getText();
                turnon = chbSun.isSelected();
                break;
            case 2:
                cbstart = tfMonStart.getText();
                cbstop = tfMonStop.getText();
                turnon = chbMon.isSelected();
                break;
            case 3:
                cbstart = tfTueStart.getText();
                cbstop = tfTueStop.getText();
                turnon = chbTue.isSelected();
                break;
            case 4:
                cbstart = tfWedStart.getText();
                cbstop = tfWedStop.getText();
                turnon = chbWed.isSelected();
                break;
            case 5:
                cbstart = tfThuStart.getText();
                cbstop = tfThuStop.getText();
                turnon = chbThu.isSelected();
                break;
            case 6:
                cbstart = tfFriStart.getText();
                cbstop = tfFriStop.getText();
                turnon = chbFri.isSelected();
                break;
            case 7:
                cbstart = tfSatStart.getText();
                cbstop = tfSatStop.getText();
                turnon = chbSat.isSelected();
                break;
        }

        try {
            startTime = new SimpleDateFormat("HH:mm").parse(cbstart);
            stopTime = new SimpleDateFormat("HH:mm").parse(cbstop);
            currentTime = new SimpleDateFormat("HH:mm").parse(new SimpleDateFormat("HH:mm").format(new Date()));

            calStart.setTime(startTime);
            calStop.setTime(stopTime);
            calCurrent.setTime(currentTime);
            
            if (turnon && (currentTime.equals(calStart.getTime()) || currentTime.after(calStart.getTime())) && (currentTime.equals(calStop.getTime()) || currentTime.before(calStop.getTime()))) {
                return true;                
            }
        } catch (ParseException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }

        return false;
    }

    public class OpenFC implements ActionListener {
        
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");

        @Override
        public void actionPerformed(ActionEvent e) {
            JFileChooser c = new JFileChooser();
            java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
            // Demonstrate "Open" dialog:
            int rVal = c.showOpenDialog(MainJFrame.this);
            if (rVal == JFileChooser.APPROVE_OPTION) {
                lbLoadSettingFileDirectory.setText(c.getCurrentDirectory().toString());
                tfLoadSettingFileName.setText(c.getSelectedFile().getName());
                
                Properties prop = new Properties();
                InputStream is;

                File file = new File(lbLoadSettingFileDirectory.getText(), tfLoadSettingFileName.getText());
                try {
                    is = new FileInputStream(file);
                    prop.load(is);

                    chbMon.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbMon")));
                    tfMonStart.setText(prop.getProperty("Schedule.tfMonStart"));
                    tfMonStop.setText(prop.getProperty("Schedule.tfMonStop"));
                    chbTue.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbTue")));
                    tfTueStart.setText(prop.getProperty("Schedule.tfTueStart"));
                    tfTueStop.setText(prop.getProperty("Schedule.tfTueStop"));
                    chbWed.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbWed")));
                    tfWedStart.setText(prop.getProperty("Schedule.tfWedStart"));
                    tfWedStop.setText(prop.getProperty("Schedule.tfWedStop"));
                    chbThu.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbThu")));
                    tfThuStart.setText(prop.getProperty("Schedule.tfThuStart"));
                    tfThuStop.setText(prop.getProperty("Schedule.tfThuStop"));
                    chbFri.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbFri")));
                    tfFriStart.setText(prop.getProperty("Schedule.tfFriStart"));
                    tfFriStop.setText(prop.getProperty("Schedule.tfFriStop"));
                    chbSat.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbSat")));
                    tfSatStart.setText(prop.getProperty("Schedule.tfSatStart"));
                    tfSatStop.setText(prop.getProperty("Schedule.tfSatStop"));
                    chbSun.setSelected(Boolean.valueOf(prop.getProperty("Schedule.chbSun")));
                    tfSunStart.setText(prop.getProperty("Schedule.tfSunStart"));
                    tfSunStop.setText(prop.getProperty("Schedule.tfSunStop"));
                    rbRepeat.setSelected(Boolean.valueOf(prop.getProperty("Schedule.rbRepeat")));
                    spRepeatCount.setValue(Integer.parseInt(prop.getProperty("Schedule.rbCount")));
                    rbRepeatCont.setSelected(Boolean.valueOf(prop.getProperty("Schedule.rbCont")));
                    taMacroScript.setText(prop.getProperty("Actions.taMacroScript"));
                    cbHotkeyFirst.setSelectedIndex(Integer.valueOf(prop.getProperty("Settings.cbHotKeyFirst")));
                    cbHotkeySecond.setSelectedIndex(Integer.valueOf(prop.getProperty("Settings.cbHotKeySecond")));
                    cbHotkeyThird.setSelectedIndex(Integer.valueOf(prop.getProperty("Settings.cbHotKeyThird")));

                    tfCoor.setText("");
                    tfCoorComment.setText("");
                    cbCoorButton.setSelectedIndex(0);
                    cbCoorClick.setSelectedIndex(0);
                    spCoorWaiting.setValue(300);

                    is.close();
                    JOptionPane.showMessageDialog(MainJFrame.this, bundle.getString("LoadMacroSuccess"), bundle.getString("Information"), JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(MainJFrame.this, bundle.getString("LoadMacroError"), bundle.getString("Error"), JOptionPane.ERROR_MESSAGE);
                }               
                
            }
            if (rVal == JFileChooser.CANCEL_OPTION) {
                tfLoadSettingFileName.setText(bundle.getString("You pressed cancel"));
            }
        }

    }

    public class SaveFC implements ActionListener {
        
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");

        @Override
        public void actionPerformed(ActionEvent e) {
            JFileChooser c = new JFileChooser();
            // Demonstrate "Save" dialog:
            int rVal = c.showSaveDialog(MainJFrame.this);
            java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
            if (rVal == JFileChooser.APPROVE_OPTION) {
                lbSaveSettingFileDirectory.setText(c.getCurrentDirectory().toString());
                tfSaveSettingFileName.setText(c.getSelectedFile().getName());
                
                Properties prop = new Properties();
                OutputStream os;

                File file = new File(lbSaveSettingFileDirectory.getText(), tfSaveSettingFileName.getText());
                try {
                    os = new FileOutputStream(file);

                    prop.setProperty("Schedule.chbMon", Boolean.toString(chbMon.isSelected()));
                    prop.setProperty("Schedule.tfMonStart", tfMonStart.getText());
                    prop.setProperty("Schedule.tfMonStop", tfMonStop.getText());
                    prop.setProperty("Schedule.chbTue", Boolean.toString(chbTue.isSelected()));
                    prop.setProperty("Schedule.tfTueStart", tfTueStart.getText());
                    prop.setProperty("Schedule.tfTueStop", tfTueStop.getText());
                    prop.setProperty("Schedule.chbWed", Boolean.toString(chbWed.isSelected()));
                    prop.setProperty("Schedule.tfWedStart", tfWedStart.getText());
                    prop.setProperty("Schedule.tfWedStop", tfWedStop.getText());
                    prop.setProperty("Schedule.chbThu", Boolean.toString(chbThu.isSelected()));
                    prop.setProperty("Schedule.tfThuStart", tfThuStart.getText());
                    prop.setProperty("Schedule.tfThuStop", tfThuStop.getText());
                    prop.setProperty("Schedule.chbFri", Boolean.toString(chbFri.isSelected()));
                    prop.setProperty("Schedule.tfFriStart", tfFriStart.getText());
                    prop.setProperty("Schedule.tfFriStop", tfFriStop.getText());
                    prop.setProperty("Schedule.chbSat", Boolean.toString(chbSat.isSelected()));
                    prop.setProperty("Schedule.tfSatStart", tfSatStart.getText());
                    prop.setProperty("Schedule.tfSatStop", tfSatStop.getText());
                    prop.setProperty("Schedule.chbSun", Boolean.toString(chbSun.isSelected()));
                    prop.setProperty("Schedule.tfSunStart", tfSunStart.getText());
                    prop.setProperty("Schedule.tfSunStop", tfSunStop.getText());
                    prop.setProperty("Schedule.rbRepeat", Boolean.toString(rbRepeat.isSelected()));
                    prop.setProperty("Schedule.rbCount", spRepeatCount.getValue().toString());
                    prop.setProperty("Schedule.rbCont", Boolean.toString(rbRepeatCont.isSelected()));
                    prop.setProperty("Actions.taMacroScript", taMacroScript.getText());
                    prop.setProperty("Settings.cbHotKeyFirst", Integer.toString(cbHotkeyFirst.getSelectedIndex()));
                    prop.setProperty("Settings.cbHotKeySecond", Integer.toString(cbHotkeySecond.getSelectedIndex()));
                    prop.setProperty("Settings.cbHotKeyThird", Integer.toString(cbHotkeyThird.getSelectedIndex()));

                    prop.store(os, "Mouse Clicker Setting File");
                    os.close();
                    JOptionPane.showMessageDialog(MainJFrame.this, bundle.getString("SaveMacroSuccess"), bundle.getString("Information"), JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(MainJFrame.this, bundle.getString("SaveMacroError"), bundle.getString("Error"), JOptionPane.ERROR_MESSAGE);
                }                 
                
            }
            if (rVal == JFileChooser.CANCEL_OPTION) {
                tfSaveSettingFileName.setText(bundle.getString("You pressed cancel"));
            }
        }
    }

    public class TimeVerifier extends InputVerifier {

        @Override
        public boolean verify(JComponent input) {
            JFormattedTextField tf = (JFormattedTextField) input;
            String text = tf.getText();
            java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
            if (text.length() == 0) {
                JOptionPane.showMessageDialog(MainJFrame.this,
                        bundle.getString("TimeWarning"),
                        bundle.getString("Warning"),
                        JOptionPane.WARNING_MESSAGE);
                return false;
            } else {
                return true;
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>       
        //</editor-fold>       
        //</editor-fold>       
        //</editor-fold>       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton BtnHotkeySet;
    public javax.swing.JTextArea TaHotkeyMessage;
    private javax.swing.ButtonGroup bgRepeat;
    private javax.swing.JButton btnCoorAdd;
    private javax.swing.JButton btnCoorClear;
    private javax.swing.JButton btnCoorStart;
    private javax.swing.JButton btnOpenLoaddlg;
    private javax.swing.JButton btnOpenSavedlg;
    private javax.swing.JButton btnSettingClear;
    public javax.swing.JButton btnStartMacro;
    private javax.swing.JComboBox<String> cbCoorButton;
    private javax.swing.JComboBox<String> cbCoorClick;
    public javax.swing.JComboBox<String> cbHotkeyFirst;
    public javax.swing.JComboBox<String> cbHotkeySecond;
    public javax.swing.JComboBox<String> cbHotkeyThird;
    private javax.swing.JCheckBox chbFri;
    private javax.swing.JCheckBox chbMon;
    private javax.swing.JCheckBox chbSat;
    private javax.swing.JCheckBox chbSun;
    private javax.swing.JCheckBox chbThu;
    private javax.swing.JCheckBox chbTue;
    private javax.swing.JCheckBox chbWed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbCoor;
    private javax.swing.JLabel lbLoadSettingFileDirectory;
    private javax.swing.JLabel lbSaveSettingFileDirectory;
    private javax.swing.JPanel pnAction;
    private javax.swing.JPanel pnSchedule;
    private javax.swing.JPanel pnSettings;
    private javax.swing.JRadioButton rbRepeat;
    private javax.swing.JRadioButton rbRepeatCont;
    private javax.swing.JSpinner spCoorWaiting;
    private javax.swing.JSpinner spRepeatCount;
    private javax.swing.JTextArea taMacroScript;
    private javax.swing.JTextField tfCoor;
    private javax.swing.JTextField tfCoorComment;
    private javax.swing.JFormattedTextField tfFriStart;
    private javax.swing.JFormattedTextField tfFriStop;
    private javax.swing.JTextField tfLoadSettingFileName;
    private javax.swing.JFormattedTextField tfMonStart;
    private javax.swing.JFormattedTextField tfMonStop;
    private javax.swing.JFormattedTextField tfSatStart;
    private javax.swing.JFormattedTextField tfSatStop;
    private javax.swing.JTextField tfSaveSettingFileName;
    private javax.swing.JFormattedTextField tfSunStart;
    private javax.swing.JFormattedTextField tfSunStop;
    private javax.swing.JFormattedTextField tfThuStart;
    private javax.swing.JFormattedTextField tfThuStop;
    private javax.swing.JFormattedTextField tfTueStart;
    private javax.swing.JFormattedTextField tfTueStop;
    private javax.swing.JFormattedTextField tfWedStart;
    private javax.swing.JFormattedTextField tfWedStop;
    // End of variables declaration//GEN-END:variables

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mouseclicker;

import com.melloware.jintellitype.HotkeyListener;
import com.melloware.jintellitype.IntellitypeListener;
import com.melloware.jintellitype.JIntellitype;
import com.melloware.jintellitype.JIntellitypeException;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author smyrnof
 */
public class WindowsJFrame extends MainJFrame implements HotkeyListener, IntellitypeListener {
    
    private static final int ShortCut = 100;
    
    @Override
    public void onHotKey(int aIdentifier) {
        if (aIdentifier == ShortCut) {
            if(threadislive) {
                mt.interrupt();
                threadislive=false;
                btnStartMacro.setBackground(Color.green);
                btnStartMacro.setText("Makroyu Başlat");
            }
        }
    }
    
    @Override
    public void onIntellitype(int aCommand) {
        // Nothing to do
    }

    /**
     * Creates new form MicrosoftJFrame
     */
    public WindowsJFrame() {
        initComponents();
        this.initJIntellitype();
        BtnHotkeySet.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                BtnHotkeySetMouseClicked(evt);
            }
        });
        btnStartMacro.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {                
                btnStartMacroMouseClicked(evt);
            }        
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(645, 450));
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public final void initJIntellitype() {
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
        try {
            JIntellitype.getInstance().addHotKeyListener(this);
            JIntellitype.getInstance().addIntellitypeListener(this);
            TaHotkeyMessage.append(bundle.getString("initJIntellitype") + "\n");
        } catch (RuntimeException ex) {
            TaHotkeyMessage.append(bundle.getString("notonWindows") + "\n");
        }
    }
    
    public void BtnHotkeySetMouseClicked(java.awt.event.MouseEvent evt) {
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
        if(cbHotkeyFirst.getSelectedItem().toString().equals(cbHotkeySecond.getSelectedItem().toString())){
            JOptionPane.showMessageDialog(WindowsJFrame.this,bundle.getString("SetHotkeyError"),bundle.getString("Error"),JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                int ascii = (int) cbHotkeyThird.getSelectedItem().toString().charAt(0);
                JIntellitype.getInstance().unregisterHotKey(ShortCut);
                JIntellitype.getInstance().registerHotKey(ShortCut, GetIdentifier(cbHotkeyFirst.getSelectedIndex()) + GetIdentifier(cbHotkeySecond.getSelectedIndex()), ascii);
                TaHotkeyMessage.append(bundle.getString("Hotkey") + " " + cbHotkeyFirst.getSelectedItem().toString() + "+" + cbHotkeySecond.getSelectedItem().toString() + "+" + cbHotkeyThird.getSelectedItem().toString() + "\n");
            } catch (JIntellitypeException e) {
                TaHotkeyMessage.append(bundle.getString("Hotkey") + " " + bundle.getString("Error"));
            }        
        }
    }
    
    public void btnStartMacroMouseClicked(java.awt.event.MouseEvent evt){
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("mouseclicker/Bundle");
        if (!threadislive){
            BtnHotkeySetMouseClicked(evt);
            mt = new MacroThread();
            mt.start();
            threadislive=true;
            btnStartMacro.setBackground(Color.red);
            btnStartMacro.setText("Makroyu Durdur");
            this.setState(MainJFrame.ICONIFIED);
        }else {
            mt.interrupt();
            threadislive=false;
            btnStartMacro.setBackground(Color.green);
            btnStartMacro.setText("Makroyu Başlat");
        }
    }   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowsJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
